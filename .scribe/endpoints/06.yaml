name: 'Profil Utilisateur'
description: |-
  Cette route permet de mettre à jour les informations du profil de l'utilisateur connecté.
  Seuls les champs fournis seront mis à jour.
endpoints:
  -
    httpMethods:
      - PUT
    uri: api/client/profile
    metadata:
      groupName: 'Profil Utilisateur'
      groupDescription: |-
        Cette route permet de mettre à jour les informations du profil de l'utilisateur connecté.
        Seuls les champs fournis seront mis à jour.
      subgroup: ''
      subgroupDescription: ''
      title: 'Mettre à jour le profil utilisateur.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: "optionnel Le nom de l'utilisateur. Exemple: Jean"
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      first_last_name:
        name: first_last_name
        description: 'optionnel Le prénom et nom de famille. Exemple: Jean Dupont'
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      email:
        name: email
        description: "optionnel L'adresse email principale (doit être unique). Exemple: jean@example.com"
        required: false
        example: qkunze@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      email_snd:
        name: email_snd
        description: "optionnel L'adresse email secondaire. Exemple: jean.pro@example.com"
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      number:
        name: number
        description: 'optionnel Le numéro de téléphone principal. Exemple: +33123456789'
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      number_snd:
        name: number_snd
        description: 'optionnel Le numéro de téléphone secondaire. Exemple: +33987654321'
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      name: consequatur
      first_last_name: consequatur
      email: qkunze@example.com
      email_snd: consequatur
      number: consequatur
      number_snd: consequatur
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "Profil mis à jour avec succès",
            "data": {
              "id": 1,
              "name": "Jean",
              "first_last_name": "Jean Dupont",
              "email": "jean@example.com",
              "email_snd": "jean.pro@example.com",
              "number": "+33123456789",
              "number_snd": "+33987654321"
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "success": false,
            "message": "Erreur de validation",
            "errors": {
              "email": ["Cette adresse email est déjà utilisée"]
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "success": false,
            "message": "Une erreur est survenue lors de la mise à jour du profil",
            "error": "Message d'erreur détaillé"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/client/updateprofilepic
    metadata:
      groupName: 'Profil Utilisateur'
      groupDescription: |-
        Cette route permet de télécharger et mettre à jour la photo de profil de l'utilisateur
        en utilisant Cloudinary pour le stockage des images.
      subgroup: ''
      subgroupDescription: ''
      title: 'Mettre à jour la photo de profil.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      profile_picture:
        name: profile_picture
        description: "requis L'image de profil à télécharger (JPEG, PNG, JPG, max 2MB)."
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters: []
    fileParameters:
      profile_picture: null
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "Image mise à jour avec succès",
            "data": {
              "image_url": "https://res.cloudinary.com/example/image/upload/v123456789/profile/user_photo.jpg",
              "image_public_id": "profile/user_photo"
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
            "success": false,
            "message": "Le fichier est invalide."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "success": false,
            "message": "Erreur de validation",
            "errors": {
              "profile_picture": ["Le fichier doit être une image"]
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "success": false,
            "message": "Une erreur est survenue lors de la mise à jour de l'image",
            "error": "Message d'erreur détaillé"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/profile
    metadata:
      groupName: 'Profil Utilisateur'
      groupDescription: "Cette route permet de récupérer les informations du profil de l'utilisateur connecté."
      subgroup: ''
      subgroupDescription: ''
      title: 'Afficher les informations du profil utilisateur.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "data": {
              "user": {
                "id": 1,
                "name": "Jean Dupont",
              }
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
            "success": false,
            "message": "Utilisateur non authentifié"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: api/profile
    metadata:
      groupName: 'Profil Utilisateur'
      groupDescription: |-
        Cette route permet de mettre à jour les informations du profil utilisateur.
        Si l'email est modifié, la vérification email est réinitialisée.
      subgroup: ''
      subgroupDescription: ''
      title: 'Mettre à jour le profil utilisateur.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: "requis Le nom de l'utilisateur. Exemple: John Doe"
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      email:
        name: email
        description: "requis L'adresse email. Exemple: john@example.com"
        required: false
        example: qkunze@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      name: consequatur
      email: qkunze@example.com
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "Profil mis à jour avec succès",
            "data": {
              "user": {
                "id": 1,
                "name": "John Doe",
                "email": "john@example.com",
                "email_verified_at": null
              }
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
            "success": false,
            "message": "Utilisateur non authentifié"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "success": false,
            "message": "Erreur de validation",
            "errors": {
              "email": ["Cette adresse email est déjà utilisée"]
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "success": false,
            "message": "Erreur lors de la mise à jour du profil"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: api/profile
    metadata:
      groupName: 'Profil Utilisateur'
      groupDescription: |-
        Cette route permet de supprimer définitivement le compte utilisateur.
        Le mot de passe actuel est requis pour confirmer la suppression.
      subgroup: ''
      subgroupDescription: ''
      title: 'Supprimer le compte utilisateur.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      password:
        name: password
        description: 'requis Le mot de passe actuel pour confirmation. Exemple: motdepasse123'
        required: false
        example: 'O[2UZ5ij-e/dl4m{o,'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      password: 'O[2UZ5ij-e/dl4m{o,'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "Compte supprimé avec succès"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
            "success": false,
            "message": "Utilisateur non authentifié"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "success": false,
            "message": "Mot de passe incorrect"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "success": false,
            "message": "Erreur lors de la suppression du compte"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
