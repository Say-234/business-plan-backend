## Autogenerated by Scribe. DO NOT MODIFY.

name: Client
description: 'Cette route permet à un utilisateur de créer un témoignage avec une note et un commentaire.'
endpoints:
  -
    httpMethods:
      - POST
    uri: api/testimonial
    metadata:
      groupName: Client
      groupDescription: 'Cette route permet à un utilisateur de créer un témoignage avec une note et un commentaire.'
      subgroup: ''
      subgroupDescription: ''
      title: 'Créer un témoignage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 255 characters.'
        required: true
        example: vmqeopfuudtdsufvyvddq
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      testimonial:
        name: testimonial
        description: 'Must not be greater than 1000 characters.'
        required: true
        example: amniihfqcoynlazghdtqt
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      note:
        name: note
        description: 'requis La note donnée (1-5). Exemple: 5'
        required: false
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      nom:
        name: nom
        description: 'requis Le nom de la personne qui témoigne. Exemple: Jean Dupont'
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      commentaire:
        name: commentaire
        description: 'requis Le commentaire du témoignage. Exemple: Excellent service'
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      name: vmqeopfuudtdsufvyvddq
      testimonial: amniihfqcoynlazghdtqt
      note: 17
      nom: consequatur
      commentaire: consequatur
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "Témoignage créé avec succès",
            "data": {
              "id": 1,
              "nom": "Jean Dupont",
              "note": 5,
              "commentaire": "Excellent service"
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "success": false,
            "message": "Erreur de validation",
            "errors": {
              "nom": ["Le champ nom est requis"]
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/client/dashboard
    metadata:
      groupName: Client
      groupDescription: |-
        Cette route retourne toutes les données nécessaires pour le tableau de bord du client :
        documents, business plans, finances, évaluations, activités récentes et notifications.
      subgroup: ''
      subgroupDescription: ''
      title: 'Afficher le tableau de bord client.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "data": {
              "user": {
                "id": 1,
                "name": "Jean Dupont",
                "email": "jean@example.com"
              },
              "bplans": [],
              "finances": [],
              "evaluations": [],
              "lastactivity": [],
              "notificationcount": 3
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
            "success": false,
            "message": "Utilisateur non authentifié"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/client/profile
    metadata:
      groupName: Client
      groupDescription: |-
        Cette route retourne les données nécessaires pour la page de profil de l'utilisateur
        incluant les activités récentes et le nombre de notifications.
      subgroup: ''
      subgroupDescription: ''
      title: 'Afficher la page de profil.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "data": {
              "lastactivity": [
                {
                  "id": 1,
                  "type": "business_plan",
                  "created_at": "2024-01-01T10:00:00Z"
                }
              ],
              "notificationcount": 2
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
            "success": false,
            "message": "Utilisateur non authentifié"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/client/notifications
    metadata:
      groupName: Client
      groupDescription: |-
        Cette route retourne toutes les notifications de l'utilisateur connecté
        avec le nombre total de notifications non lues.
      subgroup: ''
      subgroupDescription: ''
      title: 'Afficher la page des notifications.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "data": {
              "notifications": [
                {
                  "id": 1,
                  "title": "Nouveau business plan créé",
                  "message": "Votre business plan a été créé avec succès",
                  "read": 0,
                  "created_at": "2024-01-01T10:00:00Z"
                }
              ],
              "notificationcount": 5
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
            "success": false,
            "message": "Utilisateur non authentifié"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/client/notifications/mark-as-read
    metadata:
      groupName: Client
      groupDescription: 'Cette route permet de marquer une notification spécifique comme lue.'
      subgroup: ''
      subgroupDescription: ''
      title: 'Marquer une notification comme lue.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      notification_id:
        name: notification_id
        description: "requis L'ID de la notification à marquer comme lue. Exemple: 1"
        required: false
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      notification_id: 17
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "Notification marquée comme lue"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
            "success": false,
            "message": "Utilisateur non authentifié"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "success": false,
            "message": "Notification non trouvée"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
