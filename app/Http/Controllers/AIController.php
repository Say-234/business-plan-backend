<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;
use GuzzleHttp\Client;
use Illuminate\Support\Facades\Log;
use League\CommonMark\CommonMarkConverter;
use LucianoTonet\GroqPHP\Groq;

class AIController extends Controller
{
    public function askQuestion($age, $situation, $diplome, $experience, $soutien, $department, $motivation, $change_region, $project, $reason, $alone_team, $echeance, $employe, $employe_three, $investment_amount, $investment_share, $finance, $activity, $development_stage, $marketing_condition, $season, $eco_modal, $start_strategy, $market_qualification, $market_geography, $clients_identified, $client_knowledge, $competitors_identified, $suppliers_identified, $supplier_characteristics)
    {
        $client = new Client();

        $groq = new Groq(env('GROQ_API_KEY'));

        $userQuestion = "Son √¢ge: $age\n";
        $userQuestion .= "Sa situation professionnelle actuelle: $situation\n";
        $userQuestion .= "L'activit√© de la future entreprise correspond √† son dipl√¥me et/ou son parcours professionnel: $diplome\n";
        $userQuestion .= "Son exp√©rience professionnelle en lien avec le projet: $experience\n";
        $userQuestion .= "Son entourage (conjoint, famille, amis) le soutient-il ?? : $soutien\n";
        $userQuestion .= "Le d√©partement o√π il veut implant√© son entreprise: $department\n";
        $userQuestion .= "La principale raison qui motive son choix concernant le d√©partement: $motivation\n";
        $userQuestion .= "Sera-t-il pr√™t √† changer de r√©gion pour augmenter ses chances de succ√®s?: $change_region\n";
        $userQuestion .= "Son projet: $project\n";
        $userQuestion .= "La raison de ce projet entrepreunarial: $reason\n";
        $userQuestion .= "Est-il seul ou en √©quipe?: $alone_team\n";
        $userQuestion .= "L'√©chance de la cr√©ation de l'entreprise: $echeance\n";
        $userQuestion .= "Hormis lui, le nombre d'emplois qui seront cr√©√©s d√®s le d√©marrage de l'activit√©?: $employe\n";
        $userQuestion .= "Hormis lui, le nombre d'emplois qui seront cr√©√©s au bout de 3 ans d'activit√©?: $employe_three\n";
        $userQuestion .= "Le montant d'investissement que n√©cessite son projet (en FCFA): $investment_amount\n";
        $userQuestion .= "La part du montant des investissements n√©cessaires repr√©sente votre apport personnel (en %): $investment_share\n";
        $userQuestion .= "Comment son projet sera financ√©: $finance\n";
        $userQuestion .= "Le secteur d'activit√© de son projet: $activity\n";
        $userQuestion .= "Le stade de d√©veloppement de son produit/service: $development_stage\n";
        $userQuestion .= "La condition de commercialisation de son produit/service: $marketing_condition\n";
        $userQuestion .= "La saisonnalit√© de son produit/service: $season\n";
        $userQuestion .= "Le mod√®le √©conomique de l'entreprise: $eco_modal\n";
        $userQuestion .= "Sa strat√©gie de d√©marrage: $start_strategy\n";
        $userQuestion .= "La qualification du march√© sur lequel son offre est positionn√©e: $market_qualification\n";
        $userQuestion .= "La g√©ographie du march√© cibl√©: $market_geography\n";
        $userQuestion .= "Les clients identifi√©s: $clients_identified\n";
        $userQuestion .= "Ses connaissances sur les clients: $client_knowledge\n";
        $userQuestion .= "Les concurrents identifi√©s: $competitors_identified\n";
        $userQuestion .= "Les fournisseurs identifi√©s: $suppliers_identified\n";
        $userQuestion .= "Les caract√©ristiques de ses fournisseurs fournisseurs: $supplier_characteristics\n";

        $prompt = <<<EOT
Vous √™tes un expert en Business Plans, cr√©ation d‚Äôentreprise, strat√©gie de d√©veloppement et √©valuation de projets entrepreneuriaux.

Mission :
√âvaluez strictement et sans introduction le projet d√©crit ci-dessous en produisant directement les trois analyses suivantes, chacune sous forme de texte structur√© et r√©dig√© :

‚úÖ Points positifs
D√©crivez de mani√®re d√©taill√©e les forces du projet. Soulignez les √©l√©ments pertinents tels que la clart√© de l‚Äôid√©e, la solidit√© du mod√®le √©conomique, la motivation du porteur, la coh√©rence avec les tendances du march√©, les avantages concurrentiels, ou tout autre point fort. Donnez des exemples concrets s‚Äôil y a lieu.

‚ùå Points n√©gatifs / risques
Exposez les faiblesses du projet de fa√ßon professionnelle mais franche. Mettez en √©vidence les zones d‚Äôombre, incoh√©rences, impr√©cisions, risques li√©s au march√©, au mod√®le √©conomique, au profil du porteur ou aux contraintes r√©glementaires. Analysez les cons√©quences potentielles si ces points ne sont pas adress√©s.

üîß Recommandations concr√®tes
Proposez des pistes d‚Äôam√©lioration pr√©cises et applicables √† court terme. Orientez le porteur sur les ajustements prioritaires √† effectuer : repositionnement strat√©gique, validation du mod√®le √©conomique, renforcement de l‚Äô√©quipe, √©tudes de march√©, recherche de financements, partenariats, etc.

R√®gles imp√©ratives :
Aucune introduction ni r√©sum√© : commencez directement par les analyses.

Chaque partie doit √™tre r√©dig√©e comme un avis professionnel, sous forme de paragraphes explicites.

Langage clair, structur√© et professionnel, avec un ton bienveillant mais exigeant.

R√©digez exclusivement en fran√ßais.

Crit√®res d‚Äô√©valuation :
Humain : profil du porteur, √©quipe, motivation, r√©seau.

Financier : besoins, viabilit√©, mod√®le √©conomique.

Commercial : march√©, clients, concurrence, lancement.

G√©ographique : implantation, logistique, accessibilit√©.

Sectoriel : attractivit√©, r√©glementation, tendances.

Projet √† analyser :
$userQuestion
EOT;

        // $response = $client->request('POST', 'https://deepseek-all-in-one.p.rapidapi.com/deepseek', [
        //     'body' => json_encode([
        //         'model' => 'deepseek/deepseek-r1:free',
        //         'messages' => [
        //             ['role' => 'user', 'content' => $prompt]
        //         ]
        //     ]),
        //     'headers' => [
        //         'Content-Type' => 'application/json',
        //         'x-rapidapi-host' => 'deepseek-all-in-one.p.rapidapi.com',
        //         'x-rapidapi-key' => env('RAPIDAPI_KEY'), // Stock√©e dans .env
        //     ],
        // ]);

        $response = $groq->chat()->completions()->create([
            'model' => 'deepseek-r1-distill-llama-70b',
            'messages' => [
                ['role' => 'user', 'content' => $prompt]
            ],
        ]);

        // Traiter la r√©ponse brute de l'IA
        $rawResponse = $response['choices'][0]['message']['content'];

        // Diviser la r√©ponse en sections
        Log::debug($rawResponse);
        $sections = $this->parseResponseSections($rawResponse);
        Log::debug($sections);

        // Convertir chaque section en HTML avec Markdown
        // $converter = new CommonMarkConverter();
        $formattedResponse = [
            'positifs' => $sections['positifs'],
            'negatifs' => $sections['negatifs'],
            'ameliorations' => $sections['ameliorations']
        ];

        return $formattedResponse;
    }

    /**
     * Divise la r√©ponse de l'IA en sections (points positifs, points n√©gatifs, recommandations)
     *
     * @param string $rawResponse La r√©ponse brute de l'IA
     * @return array Les sections de la r√©ponse
     */
    private function parseResponseSections($rawResponse)
    {
        // Initialiser les sections avec des valeurs par d√©faut
        // $sections = [
        //     'positifs' => 'Aucun point positif identifi√©.',
        //     'negatifs' => 'Aucun point n√©gatif identifi√©.',
        //     'ameliorations' => 'Aucune recommandation identifi√©e.'
        // ];

        // // Rechercher les sections dans la r√©ponse
        // preg_match('/Point Positifs\s*:\s*(?P<positifs>.*?)(?=Point N√©gatif\s*:|Point A Am√©liorer\s*:|$)/si', $rawResponse, $matches);
        // $sections['positifs'] = trim($matches['positifs'] ?? '');

        // preg_match('/Point N√©gatif\s*:\s*(?P<negatifs>.*?)(?=Point A Am√©liorer\s*:|Point Positifs\s*:|$)/si', $rawResponse, $matches);
        // $sections['negatifs'] = trim($matches['negatifs'] ?? '');

        // preg_match('/Point A Am√©liorer\s*:\s*(?P<ameliorations>.*?)(?=Point Positifs\s*:|Point N√©gatif\s*:|$)/si', $rawResponse, $matches);
        // $sections['ameliorations'] = trim($matches['ameliorations'] ?? '');

        // Normaliser la r√©ponse pour faciliter l'analyse
        $normalizedResponse = strtolower(trim($rawResponse));

        // D√©finir les marqueurs possibles pour chaque section
        $positiveMarkers = ['points positifs', '‚úÖ', 'positifs', 'atouts', 'forces'];
        $negativeMarkers = ['points n√©gatifs', '‚ùå', 'n√©gatifs', 'risques', 'faiblesses'];
        $improvementMarkers = ['points √† am√©liorer', 'üîß', 'recommandations', 'am√©liorations', 'suggestions'];

        // Initialiser les sections
        $sections = [
            'positifs' => 'Aucun point positif identifi√©.',
            'negatifs' => 'Aucun point n√©gatif identifi√©.',
            'ameliorations' => 'Aucune recommandation identifi√©e.'
        ];

        // Trouver les positions de chaque marqueur
        $positions = [];
        foreach ([$positiveMarkers, $negativeMarkers, $improvementMarkers] as $index => $markers) {
            foreach ($markers as $marker) {
                $pos = strpos($normalizedResponse, strtolower($marker));
                if ($pos !== false) {
                    $positions[$index] = $pos;
                    break;
                }
            }
        }

        // Trier les sections par ordre d'apparition
        asort($positions);
        $orderedSections = array_keys($positions);

        // Extraire le contenu de chaque section
        foreach ($orderedSections as $i => $sectionIndex) {
            $startPos = $positions[$sectionIndex];
            $nextPos = $i < count($orderedSections) - 1 ? $positions[$orderedSections[$i + 1]] : strlen($normalizedResponse);

            $content = substr($rawResponse, $startPos, $nextPos - $startPos);
            $content = preg_replace('/^(.*?)([:]|-\n)/', '', $content); // Correction du motif regex
            $content = trim($content);

            switch ($sectionIndex) {
                case 0:
                    $sections['positifs'] = $content ?: $sections['positifs'];
                    break;
                case 1:
                    $sections['negatifs'] = $content ?: $sections['negatifs'];
                    break;
                case 2:
                    $sections['ameliorations'] = $content ?: $sections['ameliorations'];
                    break;
            }
        }

        // Nettoyer les r√©sultats
        foreach ($sections as &$section) {
            $section = preg_replace('/\s+/', ' ', trim($section));
            $section = ucfirst($section);
        }

        return $sections;
    }
}
